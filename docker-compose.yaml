version: '3'
services:
  postgres:
    image: postgres:12
    container_name: postgres
    hostname: postgres
    ports:
      - '5555:5432'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=accounts-db
    volumes:
      - postgresql_data:/var/lib/postgresql/data
    restart: always
    networks:
      - my-network
  redis:
    image: redis:latest
    container_name: redis
    hostname: redis
    ports:
      - '6379:6379'
    environment:
      - REDIS_PORT=6379
      - REDIS_PASSWORD=password
      - REDIS_DATABASES=1
    volumes:
      - redis_data:/data
    restart: always
    networks:
      - my-network
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - '9090:9090'
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus/
    networks:
      - my-network
  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - '3000:3000'
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - my-network
  elk:
    image: sebp/elk:8.15.1
    container_name: elk
    ports:
      - '5601:5601' #kibana
      - '9200:9200' #elastic
      - '5044:5044' #logstash
    volumes:
      - elk_data:/var/lib/elasticsearch
    networks:
      - my-network
  filebeat:
    image: elastic/filebeat:8.15.1
    container_name: filebeat
    depends_on:
      - elk
    command: filebeat -e -strict.perms=false
    volumes:
      - ./filebeat.yml:/usr/share/filebeat/filebeat.yml
      - ./certs:/var/certs
      - ./log:/var/log
      - filebeat_data:/usr/share/filebeat/data
    networks:
      - my-network

volumes:
  postgresql_data:
    driver: local
  redis_data:
    driver: local
  grafana_data:
    driver: local
  prometheus_data:
    driver: local
  elk_data:
    driver: local
  filebeat_data:
    driver: local

networks:
  my-network:
    driver: bridge